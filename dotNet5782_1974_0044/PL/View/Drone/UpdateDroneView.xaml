<UserControl x:Class="PL.UpdateDroneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PL" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:UpdateDroneVM />
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <local:parcelTreatedByDroneVisibility x:Key="parcelTreatedByDroneVisibility" />
            <local:ConverterUpdateModel x:Key="ConverterUpdateModel" />
            <local:parcelTreatedByDroneContent x:Key="parcelTreatedByDroneContent" />
            <local:ConvertDroneChargingVisibility x:Key="ConvertDroneChargingVisibility" />
            <local:ConvertDroneChargingContent x:Key="ConvertDroneChargingContent" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel Margin="0,10,34,118">

            <TextBlock x:Name="Id" Text ="{Binding drone.Id, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" Height="43"/>
            <TextBox x:Name="DroneModel"   Text ="{Binding drone.Model, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" Height="35"/>
            <TextBlock  Text ="{Binding drone.DroneState, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" Height="43"/>
            <TextBlock  Text ="{Binding drone.BattaryMode, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" Height="43"/>
            <TextBlock  Text ="{Binding drone.Weight, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" Height="43"/>
            
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    HorizontalAlignment="Center"
                    Content="Update drone"
                    Command="{Binding UpdateDroneCommand}" CommandParameter="{Binding DroneModel}"/>
            <!--<Button Style="{StaticResource MaterialDesignFlatButton}"
                    HorizontalAlignment="Center"
                    Content="Send To Charging"
                    Command="{Binding SendChargingDroneCommand}"/>-->
            <StackPanel x:Name="droneCharge">
                <Button x:Name="sendToCharging" Content="{Binding Path=drone.DroneState,Converter={StaticResource ConvertDroneChargingContent}}"  Visibility="{Binding Path=drone.DroneState,Converter={StaticResource ConvertDroneChargingVisibility}}"  Command="{Binding SendChargingDroneCommand}"/>
            </StackPanel>
            <StackPanel>
                <Button x:Name="parcelTreatedByDRone"  Visibility="{Binding Path=drone.DroneState ,Converter={StaticResource parcelTreatedByDroneVisibility}}">
                    <Button.Content>
                        <MultiBinding Converter="{StaticResource parcelTreatedByDroneContent}">
                            <Binding Path="drone.DroneState" />
                            <Binding Path="drone.Parcel.ParcelState" />
                        </MultiBinding>
                    </Button.Content>
                </Button>
            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>