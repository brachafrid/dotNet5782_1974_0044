<ResourceDictionary x:Name="ditionary" x:Uid="dict"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion" 
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:po ="clr-namespace:PL.PO"
                    xmlns:local="clr-namespace:PL">

    <DataTemplate DataType="{x:Type po:Location}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Latitude, StringFormat = Latitude:{0:n}}" />
            <TextBlock Text="{Binding Path=Longitude, StringFormat = Longitude:{0:n}}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:DroneToList}" >
        <Expander Header="{Binding Path=Id}">
            <StackPanel>
                <TextBlock Text="{Binding Path=DroneModel,  StringFormat= model :{0:d}}" />
                <TextBlock Text="{Binding Path=Weight, StringFormat= maxWeigth :{0}}"/>
                <Expander Header="CurrentLocation">
                    <ContentPresenter Content="{Binding Path=CurrentLocation}" />
                </Expander>
                <TextBlock Text="{Binding Path=DroneState, StringFormat= state :{0}}"/>
                <TextBlock Text="{Binding Path=BatteryState, StringFormat= batteryState :{0}%}" />
                <TextBlock Text="{Binding Path=ParcelId, StringFormat= parcel :{0:d}}" />
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:Drone}" >
        <StackPanel>
            <TextBlock Text="{Binding Path=Id, StringFormat = Id:{0:d}}" />
            <DockPanel >
                <TextBlock Text="Model"/>
                <TextBox Text="{Binding  Path= Model,NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
            </DockPanel>
            <TextBlock Text="{Binding Path=Weight, StringFormat=Weigth :{0}}"/>
            <Expander Header="CurrentLocation">
                <ContentPresenter Content="{Binding Path=Location}" />
            </Expander>
            <TextBlock Text="{Binding Path = DroneState, StringFormat=state :{0}}" />
            <TextBlock Text="{Binding Path = BattaryMode, StringFormat= BattaryMode :{0}%}" />
            <ContentPresenter Content="{Binding Path=Parcel}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:CustomerInParcel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Id, StringFormat=id :{0:d}}"/>
            <TextBlock Text="{Binding Name, StringFormat=Name :{0}}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:ParcelInTransfer}">
        <Expander >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DataContext.OpenParcelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateDroneView}}}"
                                   CommandParameter="{Binding Path=Id}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Expander.Header>
                <DockPanel >
                    <TextBlock Text="Parcel In Transfer"/>
                    <TextBlock Text="{Binding  Path= Id, StringFormat = Id:{0:d}}" />
                </DockPanel>
            </Expander.Header>
            <StackPanel>
                <TextBlock Text="{Binding Path=Weight, StringFormat = Weigth:{0}}"/>
                <TextBlock Text="{Binding Path=Piority, StringFormat = Priority:{0}}"/>
                <TextBlock Text="{Binding Path = ParcelState, StringFormat= ParcelState :{0}}"/>
                <Expander Header="CollectionPoint">
                    <ContentPresenter Content="{Binding Path=CollectionPoint}" />
                </Expander>
                <Expander Header="DeliveryDestination">
                    <ContentPresenter Content="{Binding Path=DeliveryDestination}" />
                </Expander>
                <TextBlock Text="{Binding Path= TransportDistance, StringFormat= TransportDistance :{0:n}}" />
                <Expander Header="CustomerSender" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.OpenCustomerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateDroneView}}}"
                                   CommandParameter="{Binding  Path= CustomerSender.Id}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ContentPresenter Content="{Binding Path=CustomerSender}" />
                </Expander>
                <Expander Header="CustomerReceives">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.OpenCustomerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateDroneView}}}"
                                   CommandParameter="{Binding  Path= CustomerReceives.Id}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ContentPresenter Content="{Binding Path=CustomerReceives}" />
                </Expander>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:StationToList}" >
        <Expander  Header="{Binding Path=Id}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Name, StringFormat=Name :{0}}"/>
                <TextBlock Text="{Binding Path=ChargeSlots, StringFormat=chargeSlots :{0:d}}"/>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:CustomerToList}" >
        <Expander Header="{Binding Path=Id}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Name, StringFormat=Name :{0}}"/>
                <TextBlock Text="{Binding Path=Phone, StringFormat=Phone :{0}}"/>
                <TextBlock Text="{Binding Path=NumParcelSentDelivered, StringFormat=NumParcelSentDelivered :{0:d}}"/>
                <TextBlock Text="{Binding Path=NumParcelSentNotDelivered, StringFormat=NumParcelSentNotDelivered :{0:d}}"/>
                <TextBlock Text="{Binding Path=NumParcelReceived, StringFormat=NumParcelReceived :{0:d}}"/>
                <TextBlock Text="{Binding Path=NumParcelWayToCustomer, StringFormat=NumParcelWayToCustomer :{0:d}}"/>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:Station}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Id, StringFormat=Id :{0:d}}"/>
            <DockPanel >
                <TextBlock Text="Name"/>
                <TextBox Text="{Binding Name,NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
            </DockPanel>
            <Expander Header="{materialDesign:PackIcon Kind =MapMarkerOutline }">
                <ContentPresenter Content="{Binding Path=Location}" />
            </Expander>
            <DockPanel >
                <TextBlock Text="EmptyChargeSlots"/>
                <TextBox Text ="{Binding EmptyChargeSlots, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"/>
            </DockPanel>
            <ListView ItemsSource="{Binding Path=DroneInChargings}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Id}" Header="Id" />
                        <GridViewColumn DisplayMemberBinding="{Binding Path=ChargingMode}" Header="ChargingMode" />
                    </GridView>
                </ListView.View>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.OpenDroneChargeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateStationView}}}"
                                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:Customer}">
        <StackPanel>
            <TextBlock  Text ="{Binding Id,StringFormat=Id :{0:d}}" />
            <DockPanel >
                <TextBlock Text="Name"/>
                <TextBox Text="{Binding  Path= Name,NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
            </DockPanel>
            <DockPanel >
                <TextBlock Text="Phone"/>
                <TextBox Text="{Binding  Path= Phone,NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
            </DockPanel>
            <Expander Header="Location">
                <ContentPresenter Content="{Binding Path=Location}" />
            </Expander>
            <Expander Header="Parcel From Customer">
                <ListView ItemsSource="{Binding Path=FromCustomer}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.OpenParcelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateCustomerView}}}"
                                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Expander>
            <Expander Header="Parcel To Customer">
                <ListView ItemsSource="{Binding Path=ToCustomer}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.OpenParcelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateCustomerView}}}"
                                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Expander>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:ParcelAtCustomer}">
        <Expander  Header="{Binding Path=Id, StringFormat = Id:{0:d}}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Weight, StringFormat=Weight :{0}}"/>
                <TextBlock Text="{Binding Path=Piority, StringFormat=Piority :{0}}"/>
                <TextBlock Text="{Binding Path=PackageMode, StringFormat=PackageMode :{0}}"/>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:ParcelToList}">
        <Expander Header="{Binding Path=Id, StringFormat = Id:{0:d}}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Id, StringFormat = Id:{0:d}}" />
                <Expander Header="Customer Sender">
                    <StackPanel>
                        <TextBlock Text="{Binding Path=CustomerSender.Id, StringFormat=Id :{0:d}}"/>
                        <TextBlock Text="{Binding Path=CustomerSender.Name, StringFormat=Name :{0}}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="Customer Receives">
                    <StackPanel>
                        <TextBlock Text="{Binding Path=CustomerReceives.Id, StringFormat=Id :{0:d}}"/>
                        <TextBlock Text="{Binding Path=CustomerReceives.Name, StringFormat=Name :{0}}"/>
                    </StackPanel>
                </Expander>
                <TextBlock Text="{Binding Path=Weight, StringFormat=Weight :{0}}"/>
                <TextBlock Text="{Binding Path=Piority, StringFormat=Piority :{0}}"/>
                <TextBlock Text="{Binding Path=PackageMode, StringFormat=Package Mode :{0}}"/>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:Parcel}">
        <StackPanel x:Name="parcel" >
            <TextBlock  Text ="{Binding Id, StringFormat = Id:{0:d}}" />
            <TextBlock  Text ="{Binding Piority, StringFormat=Piority :{0}}" />
            <TextBlock  Text ="{Binding Weight, StringFormat=Weight :{0} }" />
            <TextBlock Text="{Binding Path=CreationTime, StringFormat=Package CreationTime :{0}}"/>
            <TextBlock Text="{Binding Path=AssignmentTime, StringFormat=Package AssignmentTime :{0}}"/>
            <TextBlock Text="{Binding Path=CollectionTime, StringFormat=Package CollectionTime :{0}}"/>
            <TextBlock Text="{Binding Path=DeliveryTime, StringFormat=DeliveryTime :{0}}"/>
            <Expander Header="Customer Sender">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.OpenCustomerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateParcelView}}}"
                                   CommandParameter="{Binding CustomerSender.Id }"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ContentPresenter Content="{Binding Path=CustomerSender}" />
            </Expander>
            <Expander Header="Customer Receives">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.OpenCustomerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateParcelView}}}"
                                   CommandParameter="{Binding CustomerReceives.Id }"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ContentPresenter Content="{Binding Path=CustomerReceives}" />
            </Expander>
            <Expander Header="Drone With Parcel">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.OpenDroneCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UpdateParcelView}}}"
                                   CommandParameter="{Binding Drone.Id }"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ContentPresenter Content="{Binding Path=Drone}" />
            </Expander>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type po:DroneWithParcel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Id, StringFormat= Charging Id :{0:d}}" />
            <TextBlock Text="{Binding Path=ChargingMode, StringFormat= Charging Mode :{0}%}" />
            <Expander Header="CurrentLocation">
                <ContentPresenter Content="{Binding Path=CurrentLocation}" />
            </Expander>
        </StackPanel>
    </DataTemplate>


    <Style TargetType="{x:Type GroupItem}" x:Key="Group">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander>
                        <Expander.Header>
                            <TextBlock Text="{Binding Name}"/>
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>