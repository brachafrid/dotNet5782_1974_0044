<UserControl x:Class="PL.SortInput"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PL"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:po="clr-namespace:PL.PO" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" >
    <UserControl.Resources>
        <ResourceDictionary>
            <local:ConverterCancelFilterVisibility x:Key="ConverterCancelFilterVisibility" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <StackPanel>
            <Label Content="Group By:"/>
            <ComboBox  ItemsSource="{Binding Path=SortOption}" x:Name="Group" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding GroupCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=Group}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Button Content="Cancel Group by"  Command="{Binding CancelGroupCommand}"/>
            <Label Content="Filter By:"/>
            <ComboBox  ItemsSource="{Binding Path=SortOption}" x:Name="sort">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ShowKindOfSortCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=sort}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBox Text="{Binding Path = Parent.DataContext.ModelContain, RelativeSource = {RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Path = Parent.DataContext.StringSortVisibility.visibility, RelativeSource = {RelativeSource Self} }"  />
            <ComboBox x:Name="weight" ItemsSource="{Binding Path=Parent.DataContext.WeightCategories,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisibilityWeightCategories.visibility,RelativeSource = {RelativeSource Self}}"  >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding FilterCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=weight}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox x:Name="Piority" ItemsSource="{Binding Path=Parent.DataContext.PrioritiesArray,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisibilityPriorities.visibility,RelativeSource = {RelativeSource Self}}"  >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding FilterCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=Piority}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox x:Name="State" ItemsSource="{Binding Path=Parent.DataContext.DroneState,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisibilityDroneState.visibility,RelativeSource = {RelativeSource Self}}"  >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding FilterCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=State}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox x:Name="Packege" ItemsSource="{Binding Path=Parent.DataContext.PackageMode,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisblePackegeMode.visibility,RelativeSource = {RelativeSource Self}}"  >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding FilterCommand}" CommandParameter="{Binding Path=SelectedValue, ElementName=Packege}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Label Content="minimum" Visibility="{Binding Path=Parent.DataContext.VisbleDouble.visibility,RelativeSource = {RelativeSource Self}}"/>
            <Slider x:Name="min" Minimum="0" Maximum="{Binding Value, ElementName=max}" Value="{Binding Path=Parent.DataContext.DoubleFirstChange,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisbleDouble.visibility,RelativeSource = {RelativeSource Self}}" Style="{StaticResource MaterialDesignDiscreteSlider}" TickPlacement="BottomRight"/>
            <Label Content="maximum" Visibility="{Binding Path=Parent.DataContext.VisbleDouble.visibility,RelativeSource = {RelativeSource Self}}"/>
            <Slider x:Name="max" Minimum="{Binding Value,ElementName=min}" Maximum="100" Value="{Binding Path=Parent.DataContext.DoubleLastChange,RelativeSource = {RelativeSource Self}}" Visibility="{Binding Path=Parent.DataContext.VisbleDouble.visibility,RelativeSource = {RelativeSource Self}}" Style="{StaticResource MaterialDesignDiscreteSlider}" TickPlacement="BottomRight"/>
            <Button Content="Cancel Filters" IsEnabled="{Binding Path=Filters.Count ,Converter={StaticResource ConverterCancelFilterVisibility}}" Command="{Binding CancelFilterCommand}"/>
        </StackPanel>
    </Grid>
</UserControl>
